{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBAChCG,EAAMJ,SAASC,cAAc,yBAGnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAExCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,OATtBO,QAAQC,IAAIZ,EAAOa,OAgBnBZ,EAAIa,iBAAiB,SAAS,SAAAC,GAC5BA,EAAMC,iBAEJ,IAAIC,EAAQrB,EAAWiB,MACvBF,QAAQC,IAAIK,GACZ,IAAIC,EAAOnB,EAAUc,MACrBF,QAAQC,IAAIM,GACZ,IAAI,IAAIC,EAAI,EAAGA,EAAGnB,EAAOa,MAAOM,IAG5BjB,EAAcC,SAAUC,OAC7BgB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARlB,SAAUoB,EAAKF,EAALjB,MACjBoB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARlB,SAAUoB,EAAKF,EAALjB,MAClBoB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAuCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]')\nconst stepDelay = document.querySelector('input[name=\"step\"]')\nconst amount = document.querySelector('input[name=\"amount\"]')\nconst btn = document.querySelector('button[type=\"submit\"]')\nconsole.log(amount.value);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay})\n  } else {\n    reject({position, delay})\n  }\n    })\n  })\n  \n}\n\nbtn.addEventListener('click', event => {\n  event.preventDefault()\n  \n    let first = firstDelay.value\n    console.log(first);\n    let step = stepDelay.value\n    console.log(step);\n    for(let i = 0; i< amount.value; i++){\n\n\n        createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n  })\n\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","value","addEventListener","event","preventDefault","first","step","i","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.27d45aa0.js.map"}